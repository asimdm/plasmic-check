// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: oEu39c8WZuPtSHP9YhujE1
// Component: sxxN308yjLrDI
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import NavBar from "../../NavBar"; // plasmic-import: 0Wk7JhBML7RLpE/component
import Button from "../../Button"; // plasmic-import: VK-SGWzVbASePV/component
import { ProductCollection } from "@plasmicpkgs/commerce"; // plasmic-import: vU2jzVAnFP/codeComponent
import ProductCard from "../../ProductCard"; // plasmic-import: qRrlAql5CMDSfE/component
import EmojiValueProps from "../../EmojiValueProps"; // plasmic-import: xEinRWz90wfPAv/component
import Value from "../../Value"; // plasmic-import: zMLjntuNQvHvEv/component
import { CategoryCollection } from "@plasmicpkgs/commerce"; // plasmic-import: ny07p45F84c_/codeComponent
import { CategoryField } from "@plasmicpkgs/commerce"; // plasmic-import: hzqiq--xdG5T/codeComponent
import Footer from "../../Footer"; // plasmic-import: 6bcOMrmLGau9wo/component
import { useScreenVariants as useScreenVariantsy07Ui0Yi7Kc10 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Y-07UI0yi7kc10/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_full_commerce_storefront.module.css"; // plasmic-import: oEu39c8WZuPtSHP9YhujE1/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: sxxN308yjLrDI/css
import RightArrowIcon from "./icons/PlasmicIcon__RightArrow"; // plasmic-import: -lBdOn8B-3badT/icon
import PlaneIcon from "./icons/PlasmicIcon__Plane"; // plasmic-import: qtJVdnZFBgVqb2/icon
import DocumentIcon from "./icons/PlasmicIcon__Document"; // plasmic-import: 0tIJVmNkquWRPH/icon
import LockIcon from "./icons/PlasmicIcon__Lock"; // plasmic-import: zok6-TaseJQYNi/icon
import SpeakerphoneIcon from "./icons/PlasmicIcon__Speakerphone"; // plasmic-import: -0L42B16S2Tnq7/icon
import MedalIcon from "./icons/PlasmicIcon__Medal"; // plasmic-import: CPSuIlHXnQqe5b/icon
import LeafIcon from "./icons/PlasmicIcon__Leaf"; // plasmic-import: cFPxoPlzq37eA_/icon
import ShoeIcon from "./icons/PlasmicIcon__Shoe"; // plasmic-import: MdoOgA8bbzHf7q/icon
import PeaceIcon from "./icons/PlasmicIcon__Peace"; // plasmic-import: 2EP4P4UVA7-SKF/icon

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array("container42");

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsy07Ui0Yi7Kc10()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <NavBar
            data-plasmic-name={"navBar"}
            data-plasmic-override={overrides.navBar}
            className={classNames("__wab_instance", sty.navBar)}
          />

          <section className={classNames(projectcss.all, sty.section__fgaiv)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"container3"}
              data-plasmic-override={overrides.container3}
              hasGap={true}
              className={classNames(projectcss.all, sty.container3)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__bda9V)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__jCiry)}
                >
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    {"New collection!"}
                  </h1>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4GCwe
                    )}
                  >
                    {
                      "A nam quisque orci ut vestibulum eget sem aliquet a dictumst condimentum ad quam porta a inceptos consectetur sagittis a a commodo ridiculus tempor egestas."
                    }
                  </div>
                </p.Stack>
                <Button
                  className={classNames("__wab_instance", sty.button___6WFC)}
                  colors={"black"}
                  endIcon={
                    <RightArrowIcon
                      className={classNames(projectcss.all, sty.svg__m2Ejg)}
                      role={"img"}
                    />
                  }
                  link={`/category`}
                  rounded={true}
                  showEndIcon={true}
                  size={"large"}
                >
                  {"Shop"}
                </Button>
              </p.Stack>
            </p.Stack>
          </section>
          <section className={classNames(projectcss.all, sty.section___5NX5)}>
            <div
              data-plasmic-name={"container4"}
              data-plasmic-override={overrides.container4}
              className={classNames(projectcss.all, sty.container4)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__o6Xva)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__guOol
                  )}
                >
                  {"Featured"}
                </div>
                <Button
                  className={classNames("__wab_instance", sty.button__dWHzU)}
                  colors={"link"}
                  endIcon={
                    <RightArrowIcon
                      className={classNames(projectcss.all, sty.svg__uKaaG)}
                      role={"img"}
                    />
                  }
                  link={`/category`}
                  showEndIcon={true}
                >
                  {"See more"}
                </Button>
              </div>
            </div>
            {true ? (
              <div
                data-plasmic-name={"container"}
                data-plasmic-override={overrides.container}
                className={classNames(projectcss.all, sty.container)}
              >
                <ProductCollection
                  category={"626c0a6465d64c00122ec197"}
                  className={classNames(
                    "__wab_instance",
                    sty.productCollection__yrtzt
                  )}
                  emptyMessage={
                    <ph.DataCtxReader>
                      {$ctx => (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__z7ITw
                          )}
                        >
                          {"No product found!"}
                        </div>
                      )}
                    </ph.DataCtxReader>
                  }
                  loadingMessage={
                    <ph.DataCtxReader>
                      {$ctx => (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__byqCk
                          )}
                        >
                          {"Loading..."}
                        </div>
                      )}
                    </ph.DataCtxReader>
                  }
                >
                  <ph.DataCtxReader>
                    {$ctx => (
                      <ProductCard
                        className={classNames(
                          "__wab_instance",
                          sty.productCard___9NVz4
                        )}
                        link={`/item`}
                      />
                    )}
                  </ph.DataCtxReader>
                </ProductCollection>
              </div>
            ) : null}
          </section>
          <section className={classNames(projectcss.all, sty.section__k3M57)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__qCjuO)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__cjs1S)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__lCoZp)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gsKf4
                    )}
                  >
                    {"Our best shoe sale of the year"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uBEb
                    )}
                  >
                    {
                      "Signature style. Unsurpassed quality and comfort. Now’s the perfect time to save on iconic shoes."
                    }
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__iOxAp)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jlkcq
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"3 "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontStyle: "italic" }}
                      >
                        {"for"}
                      </span>
                      <React.Fragment>{" $169"}</React.Fragment>
                    </React.Fragment>
                  </div>
                  <Button
                    colors={"black"}
                    endIcon={
                      <RightArrowIcon
                        className={classNames(projectcss.all, sty.svg___1OyJb)}
                        role={"img"}
                      />
                    }
                    link={`/category`}
                    rounded={true}
                    showEndIcon={true}
                    size={"large"}
                  >
                    {"Shop sale"}
                  </Button>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </section>
          <EmojiValueProps
            data-plasmic-name={"emojiValueProps"}
            data-plasmic-override={overrides.emojiValueProps}
            className={classNames("__wab_instance", sty.emojiValueProps)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div className={classNames(projectcss.all, sty.column__eNgfH)}>
                <Value
                  children2={
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__hiNqb
                      )}
                      colors={"black"}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(projectcss.all, sty.svg__jrAlg)}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large"}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value__bghwn)}
                  icon={
                    <PlaneIcon
                      className={classNames(projectcss.all, sty.svg__lOduu)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__r4Dcj
                    )}
                  >
                    {"Worldwide shipping"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__y6Swl
                    )}
                  >
                    {"Special financing and earn rewards."}
                  </div>
                </Value>
              </div>
              <div className={classNames(projectcss.all, sty.column__qiBub)}>
                <Value
                  children2={
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__r4BTb
                      )}
                      colors={"black"}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(projectcss.all, sty.svg__aNfk)}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large"}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value__fJ1Fo)}
                  icon={
                    <DocumentIcon
                      className={classNames(projectcss.all, sty.svg__uYVx1)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mbmmG
                    )}
                  >
                    {"30-day guarantee"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kUzj4
                    )}
                  >
                    {"Free return policy."}
                  </div>
                </Value>
              </div>
              <div className={classNames(projectcss.all, sty.column__glm3P)}>
                <Value
                  children2={
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__fpm2O
                      )}
                      colors={"black"}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(projectcss.all, sty.svg__gqXt)}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large"}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value__nutcS)}
                  icon={
                    <LockIcon
                      className={classNames(projectcss.all, sty.svg__mRZeP)}
                      role={"img"}
                    />
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fo4V2
                    )}
                  >
                    {"Secured payments"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hN7U
                    )}
                  >
                    {"We accept major credit cards."}
                  </div>
                </Value>
              </div>
            </p.Stack>
          </EmojiValueProps>
          <section className={classNames(projectcss.all, sty.section__yiphW)}>
            <div
              data-plasmic-name={"container42"}
              data-plasmic-override={overrides.container42}
              className={classNames(projectcss.all, sty.container42)}
            >
              {p.renderPlasmicSlot({
                defaultContents: (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__pakq)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jKg9O
                      )}
                    >
                      {"Just added"}
                    </div>
                    <Button
                      className={classNames("__wab_instance", sty.button__qzTi)}
                      colors={"link"}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___3NX6G
                          )}
                          role={"img"}
                        />
                      }
                      link={`/category`}
                      showEndIcon={true}
                    >
                      {"See more"}
                    </Button>
                  </div>
                ),

                value: args.container42
              })}
            </div>
            <ProductCollection
              category={"626c0a6465d64c00122ec197"}
              className={classNames(
                "__wab_instance",
                sty.productCollection___4HlEd
              )}
              emptyMessage={
                <ph.DataCtxReader>
                  {$ctx => (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__idjHb
                      )}
                    >
                      {"No product found!"}
                    </div>
                  )}
                </ph.DataCtxReader>
              }
              loadingMessage={
                <ph.DataCtxReader>
                  {$ctx => (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___82Gfr
                      )}
                    >
                      {"Loading..."}
                    </div>
                  )}
                </ph.DataCtxReader>
              }
            >
              <ph.DataCtxReader>
                {$ctx =>
                  true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tnd3V)}
                    >
                      <ProductCard
                        className={classNames(
                          "__wab_instance",
                          sty.productCard__wafSf
                        )}
                      />
                    </div>
                  ) : null
                }
              </ph.DataCtxReader>
            </ProductCollection>
          </section>
          <section className={classNames(projectcss.all, sty.section__l4Att)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"container6"}
              data-plasmic-override={overrides.container6}
              hasGap={true}
              className={classNames(projectcss.all, sty.container6)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__j8S0W)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__la04
                  )}
                >
                  {"Categories"}
                </div>
                <Button
                  className={classNames("__wab_instance", sty.button__enL81)}
                  states={"active"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dxset
                    )}
                  >
                    {"All"}
                  </div>
                </Button>
                <CategoryCollection
                  data-plasmic-name={"categoryCollection"}
                  data-plasmic-override={overrides.categoryCollection}
                  className={classNames(
                    "__wab_instance",
                    sty.categoryCollection
                  )}
                  emptyMessage={
                    <ph.DataCtxReader>
                      {$ctx => (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___3SIip
                          )}
                        >
                          {"No collection found!"}
                        </div>
                      )}
                    </ph.DataCtxReader>
                  }
                  loadingMessage={
                    <ph.DataCtxReader>
                      {$ctx => (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zvUgC
                          )}
                        >
                          {"Loading..."}
                        </div>
                      )}
                    </ph.DataCtxReader>
                  }
                >
                  <ph.DataCtxReader>
                    {$ctx => (
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__sxX7R
                        )}
                      >
                        <CategoryField
                          data-plasmic-name={"categoryField"}
                          data-plasmic-override={overrides.categoryField}
                          className={classNames(
                            "__wab_instance",
                            sty.categoryField
                          )}
                          field={"name"}
                        />
                      </Button>
                    )}
                  </ph.DataCtxReader>
                </CategoryCollection>
              </p.Stack>
              <ProductCollection
                className={classNames(
                  "__wab_instance",
                  sty.productCollection__bEqMm
                )}
                count={16}
                emptyMessage={
                  <ph.DataCtxReader>
                    {$ctx => (
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iDiG
                        )}
                      >
                        {"No product found!"}
                      </div>
                    )}
                  </ph.DataCtxReader>
                }
                loadingMessage={
                  <ph.DataCtxReader>
                    {$ctx => (
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__x1Kky
                        )}
                      >
                        {"Loading..."}
                      </div>
                    )}
                  </ph.DataCtxReader>
                }
                sort={"price-asc"}
              >
                <ph.DataCtxReader>
                  {$ctx => (
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__vkz51
                      )}
                      small={true}
                    />
                  )}
                </ph.DataCtxReader>
              </ProductCollection>
            </p.Stack>
          </section>
          <section className={classNames(projectcss.all, sty.section__lW9T)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"container434"}
              data-plasmic-override={overrides.container434}
              hasGap={true}
              className={classNames(projectcss.all, sty.container434)}
            >
              <Value
                center={true}
                children2={
                  <Button
                    className={classNames("__wab_instance", sty.button__jdOea)}
                    colors={"black"}
                    endIcon={
                      <RightArrowIcon
                        className={classNames(projectcss.all, sty.svg__eCld)}
                        role={"img"}
                      />
                    }
                    rounded={true}
                    showEndIcon={true}
                  >
                    {"Read our letter"}
                  </Button>
                }
                className={classNames("__wab_instance", sty.value__twzl8)}
                icon={
                  <SpeakerphoneIcon
                    className={classNames(projectcss.all, sty.svg__zHsTd)}
                    role={"img"}
                  />
                }
                topBottom={true}
                withButton={true}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__uCyH
                  )}
                >
                  {"Our goals"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hs05M
                  )}
                >
                  {"We’re learning how to become a new kind of company."}
                </div>
              </Value>
            </p.Stack>
          </section>
          <section className={classNames(projectcss.all, sty.section__hTdVa)}>
            <p.Stack
              as={"div"}
              data-plasmic-name={"container433"}
              data-plasmic-override={overrides.container433}
              hasGap={true}
              className={classNames(projectcss.all, sty.container433)}
            >
              <div className={classNames(projectcss.all, sty.column__hiByl)}>
                <Value
                  children2={
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__nulsl
                      )}
                      colors={"black"}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(projectcss.all, sty.svg__hvAmS)}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large"}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value__bFuqG)}
                  icon={
                    <MedalIcon
                      className={classNames(projectcss.all, sty.svg__wtJt1)}
                      role={"img"}
                    />
                  }
                  topBottom={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nxGk
                    )}
                  >
                    {"We guarantee everything we sell."}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lmE2L
                    )}
                  >
                    {
                      "Ad fringilla ut nisi in hendrerit malesuada nascetur a in ridiculus."
                    }
                  </div>
                  <Button
                    className={classNames("__wab_instance", sty.button__y70Dw)}
                    colors={"link"}
                  >
                    {"View guarantee"}
                  </Button>
                </Value>
              </div>
              <div className={classNames(projectcss.all, sty.column___62GF)}>
                <Value
                  children2={
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___5Zc7X
                      )}
                      colors={"black"}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(projectcss.all, sty.svg__vOokx)}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large"}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value__lrSgD)}
                  icon={
                    <LeafIcon
                      className={classNames(projectcss.all, sty.svg__mYmHg)}
                      role={"img"}
                    />
                  }
                  topBottom={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qLoU3
                    )}
                  >
                    {"Know how your shoes are made."}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rhFbT
                    )}
                  >
                    {
                      "Parturient blandit viverra blandit sem suspendisse himenaeos."
                    }
                  </div>
                  <Button
                    className={classNames("__wab_instance", sty.button__yIFmS)}
                    colors={"link"}
                  >
                    {"About the supply chain"}
                  </Button>
                </Value>
              </div>
              <div className={classNames(projectcss.all, sty.column__ydKAv)}>
                <Value
                  children2={
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__w9Wt2
                      )}
                      colors={"black"}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(projectcss.all, sty.svg__ktcX)}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large"}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value__qjCz6)}
                  icon={
                    <ShoeIcon
                      className={classNames(projectcss.all, sty.svg___9SBVb)}
                      role={"img"}
                    />
                  }
                  topBottom={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jGsAh
                    )}
                  >
                    {"Keep your shoes in play."}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ptEn1
                    )}
                  >
                    {
                      "Adipiscing ornare dui tellus nam nibh cum a torquent maecenas."
                    }
                  </div>
                  <Button
                    className={classNames("__wab_instance", sty.button___21FyI)}
                    colors={"link"}
                  >
                    {"Keep your shoes in play"}
                  </Button>
                </Value>
              </div>
              <div className={classNames(projectcss.all, sty.column__ljG0)}>
                <Value
                  children2={
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__lZj1C
                      )}
                      colors={"black"}
                      endIcon={
                        <RightArrowIcon
                          className={classNames(projectcss.all, sty.svg__c0Jjl)}
                          role={"img"}
                        />
                      }
                      rounded={true}
                      size={"large"}
                    >
                      {"Read our letter"}
                    </Button>
                  }
                  className={classNames("__wab_instance", sty.value__nlje7)}
                  icon={
                    <PeaceIcon
                      className={classNames(projectcss.all, sty.svg__jGKmw)}
                      role={"img"}
                    />
                  }
                  topBottom={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qocpd
                    )}
                  >
                    {"We give back for every sale."}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__p4X2K
                    )}
                  >
                    {
                      "Parturient vestibulum ut a dui parturient habitant netus integer ipsum."
                    }
                  </div>
                  <Button
                    className={classNames("__wab_instance", sty.button__bAjid)}
                    colors={"link"}
                  >
                    {"Give back for every sale"}
                  </Button>
                </Value>
              </div>
            </p.Stack>
          </section>
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navBar",
    "container3",
    "h1",
    "container4",
    "container",
    "emojiValueProps",
    "columns",
    "container42",
    "container6",
    "categoryCollection",
    "categoryField",
    "container434",
    "container433",
    "footer"
  ],

  navBar: ["navBar"],
  container3: ["container3", "h1"],
  h1: ["h1"],
  container4: ["container4"],
  container: ["container"],
  emojiValueProps: ["emojiValueProps", "columns"],
  columns: ["columns"],
  container42: ["container42"],
  container6: ["container6", "categoryCollection", "categoryField"],
  categoryCollection: ["categoryCollection", "categoryField"],
  categoryField: ["categoryField"],
  container434: ["container434"],
  container433: ["container433"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navBar: makeNodeComponent("navBar"),
    container3: makeNodeComponent("container3"),
    h1: makeNodeComponent("h1"),
    container4: makeNodeComponent("container4"),
    container: makeNodeComponent("container"),
    emojiValueProps: makeNodeComponent("emojiValueProps"),
    columns: makeNodeComponent("columns"),
    container42: makeNodeComponent("container42"),
    container6: makeNodeComponent("container6"),
    categoryCollection: makeNodeComponent("categoryCollection"),
    categoryField: makeNodeComponent("categoryField"),
    container434: makeNodeComponent("container434"),
    container433: makeNodeComponent("container433"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "ShoeShop",
      description:
        "Ad ullamcorper eros nibh pharetra vulputate imperdiet consectetur vestibulum at ac posuere volutpat maecenas gravida dictum suscipit habitasse class scelerisque fermentum blandit mi a.",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
